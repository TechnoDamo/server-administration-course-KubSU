name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docker

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --extras test

  test:
    runs-on: ubuntu-latest
    needs: [build]
    defaults:
      run:
        working-directory: ./docker

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Setup SSH infrastructure
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          # Write key with proper formatting
          echo "${{ secrets.SSH_GITHUB_ACTIONS }}" | sed 's/\\n/\n/g' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          # Verify key
          ssh-keygen -l -f ~/.ssh/deploy_key || echo "Key format warning"

      - name: Establish SSH tunnel
        run: |
          # Add host with custom port
          ssh-keyscan -p 58529 -H 212.192.134.135 >> ~/.ssh/known_hosts
          # Test direct connection first
          ssh -p 58529 -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
            chatelet@212.192.134.135 "echo 'SSH test successful'" || exit 1
          # Start tunnel with debug
          ssh -v -p 58529 -i ~/.ssh/deploy_key -N -L 5432:localhost:5432 \
            chatelet@212.192.134.135 > ssh.log 2>&1 &
          echo $! > ssh_tunnel.pid
          sleep 15
          # Verify tunnel
          if ! pgrep -f "5432:localhost:5432"; then
            echo "Tunnel failed. Debug output:"
            cat ssh.log
            exit 1
          fi

      - name: Verify PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          pg_isready -h localhost -p 5432 -U kubsu || (echo "PostgreSQL unavailable"; exit 1)

      - name: Run tests
        env:
          DATABASE_URL: "postgresql://kubsu:kubsu@localhost:5432/kubsu"
        run: |
          poetry run pytest --maxfail=1 --disable-warnings -q

      - name: Tunnel cleanup
        if: always()
        run: |
          if [ -f ssh_tunnel.pid ]; then
            kill $(cat ssh_tunnel.pid) || true
            rm ssh_tunnel.pid
          fi
          rm -f ssh.log

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: success()

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_GITHUB_ACTIONS }}" | sed 's/\\n/\n/g' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p 58529 -H 212.192.134.135 >> ~/.ssh/known_hosts

      - name: Execute deployment
        run: |
          ssh -p 58529 -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
            chatelet@kubsu.tyvik.ru << 'EOF'
            cd ~/tasks/docker
            git pull origin master
            docker build -t my-app .
            docker stop my-app || true
            docker rm my-app || true
            docker run -d --network host --name my-app my-app
          EOF

  verify:
    runs-on: ubuntu-latest
    needs: [deploy]
    timeout-minutes: 5

    steps:
      - name: Health check
        run: |
          for i in {1..10}; do
            if curl --silent --fail http://212.192.134.135:60080/chatelet/users/; then
              echo "Application healthy"
              exit 0
            fi
            sleep 10
          done
          echo "Deployment verification failed"
          exit 1
