name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docker

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --extras test

  test:
    runs-on: ubuntu-latest
    needs: [build]
    container:
      image: python:3.11-slim
      options: --network host  # Critical change - uses host network
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: kubsu
          POSTGRES_PASSWORD: kubsu
          POSTGRES_USER: kubsu
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./docker

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install psql client for health check
        run: apt-get update && apt-get install -y postgresql-client

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --extras test

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run tests
        env:
          DATABASE_URL: postgresql://kubsu:kubsu@localhost:5432/kubsu
        run: |
          poetry run pytest --maxfail=1 --disable-warnings -q

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: success()

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H 212.192.134.135 >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no chatelet@kubsu.tyvik.ru << 'EOF'
            cd ~/tasks/docker
            git pull origin master
            docker build -t my-app .
            docker stop my-app || true
            docker rm my-app || true
            docker run -d --network host --name my-app my-app
          EOF

  verify:
    runs-on: ubuntu-latest
    needs: [deploy]
    timeout-minutes: 5

    steps:
      - name: Check deployment status
        run: |
          for i in {1..10}; do
            if curl --silent --fail http://212.192.134.135:60080/chatelet/users/; then
              echo "Application is running successfully"
              exit 0
            fi
            sleep 10
          done
          echo "Application did not start properly"
          exit 1
