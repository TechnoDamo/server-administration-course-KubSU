name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with test

  test:
    runs-on: ubuntu-latest
    needs: [build]
    container:
      image: python:3.12-alpine
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: kubsu
          POSTGRES_PASSWORD: kubsu
          POSTGRES_PORT: 5432
          POSTGRES_USER: kubsu
        ports:
          - 5432:5432
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with test

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: success()

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/SSH_GITHUB_ACTIONS
          chmod 600 ~/.ssh/SSH_GITHUB_ACTIONS
          ssh-keyscan -H 212.192.134.135 >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh -i ~/.ssh/id_rsa chatelet@kubsu.tyvik.ru << 'EOF'
            cd ~/tasks/docker &&
            git pull origin master &&
            docker build -t my-app . &&
            docker stop my-app || true &&
            docker rm my-app || true &&
            docker run -d --network host --name my-app my-app
          EOF

  verify:
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Check deployment status
        run: |
          curl --silent --fail http://212.192.134.135:60080/chatelet/users/ || exit 1
